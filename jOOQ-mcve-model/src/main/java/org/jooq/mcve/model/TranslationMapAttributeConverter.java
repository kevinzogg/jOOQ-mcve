package org.jooq.mcve.model;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.persistence.AttributeConverter;
import javax.persistence.Converter;
import java.io.IOException;

@Converter
public class TranslationMapAttributeConverter implements AttributeConverter<TranslationMap, String> {

    private static final Logger LOGGER = LoggerFactory.getLogger(TranslationMapAttributeConverter.class);
    private final ObjectMapper objectMapper;

    public TranslationMapAttributeConverter() {
        this.objectMapper = new ObjectMapper();
    }

    @Override
    public String convertToDatabaseColumn(TranslationMap attribute) {
        if (attribute == null || attribute.isEmpty())
            return null;

        try {
            return this.objectMapper.writeValueAsString(attribute);
        } catch (JsonProcessingException e) {
            LOGGER.error("Could not convert entity value {} to db value.", attribute);
            return null;
        }
    }

    @Override
    public TranslationMap convertToEntityAttribute(String dbData) {
        if (dbData == null)
            return null;

        try {
            return this.objectMapper.readValue(dbData, TranslationMap.class);
        } catch (IOException e) {
            LOGGER.error("Could not convert db value {} to entity value.", dbData);
            return null;
        }
    }

}
