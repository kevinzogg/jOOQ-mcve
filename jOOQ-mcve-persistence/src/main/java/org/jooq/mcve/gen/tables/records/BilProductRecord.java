/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.gen.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.mcve.gen.tables.BilProduct;
import org.jooq.mcve.model.TranslationMap;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BilProductRecord extends UpdatableRecordImpl<BilProductRecord> implements Record3<Long, String, TranslationMap> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>BIL_PRODUCT.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>BIL_PRODUCT.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>BIL_PRODUCT.PRODUCT_KEY</code>.
     */
    public void setProductKey(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>BIL_PRODUCT.PRODUCT_KEY</code>.
     */
    public String getProductKey() {
        return (String) get(1);
    }

    /**
     * Setter for <code>BIL_PRODUCT.PRODUCT_NAME_I18N</code>.
     */
    public void setProductNameI18n(TranslationMap value) {
        set(2, value);
    }

    /**
     * Getter for <code>BIL_PRODUCT.PRODUCT_NAME_I18N</code>.
     */
    public TranslationMap getProductNameI18n() {
        return (TranslationMap) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, TranslationMap> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, TranslationMap> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BilProduct.BIL_PRODUCT.ID;
    }

    @Override
    public Field<String> field2() {
        return BilProduct.BIL_PRODUCT.PRODUCT_KEY;
    }

    @Override
    public Field<TranslationMap> field3() {
        return BilProduct.BIL_PRODUCT.PRODUCT_NAME_I18N;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getProductKey();
    }

    @Override
    public TranslationMap component3() {
        return getProductNameI18n();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getProductKey();
    }

    @Override
    public TranslationMap value3() {
        return getProductNameI18n();
    }

    @Override
    public BilProductRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BilProductRecord value2(String value) {
        setProductKey(value);
        return this;
    }

    @Override
    public BilProductRecord value3(TranslationMap value) {
        setProductNameI18n(value);
        return this;
    }

    @Override
    public BilProductRecord values(Long value1, String value2, TranslationMap value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BilProductRecord
     */
    public BilProductRecord() {
        super(BilProduct.BIL_PRODUCT);
    }

    /**
     * Create a detached, initialised BilProductRecord
     */
    public BilProductRecord(Long id, String productKey, TranslationMap productNameI18n) {
        super(BilProduct.BIL_PRODUCT);

        setId(id);
        setProductKey(productKey);
        setProductNameI18n(productNameI18n);
    }
}
